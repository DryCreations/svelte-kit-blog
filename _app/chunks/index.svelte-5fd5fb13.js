import{S as t,i as e,s,A as a,j as n,m as o,o as l,p as r,v as c,r as $,w as g,q as i,k as f,e as p,n as d,c as u,a as m,d as h,b as v,f as b,t as w,g as x,F as y}from"./vendor-a00fb730.js";import{D as j}from"./default-4cc7ff77.js";import{H as k,P as E,a as H,A as T}from"./a-0d17ffb2.js";function q(t){let e;return{c(){e=w(W)},l(t){e=x(t,W)},m(t,s){b(t,e,s)},p:y,d(t){t&&h(e)}}}function I(t){let e;return{c(){e=w("Klipse")},l(t){e=x(t,"Klipse")},m(t,s){b(t,e,s)},d(t){t&&h(e)}}}function P(t){let e,s,a,r;return s=new T({props:{href:"https://github.com/viebel/klipse",rel:"nofollow",$$slots:{default:[I]},$$scope:{ctx:t}}}),{c(){e=w("I’m using "),n(s.$$.fragment),a=w(" to render live code editors in different languages. I only enabled a few different languages on this blog, mostly because I don’t know all of the languages it has available. This allows me to write more immersive blog posts with interactive elements.")},l(t){e=x(t,"I’m using "),o(s.$$.fragment,t),a=x(t," to render live code editors in different languages. I only enabled a few different languages on this blog, mostly because I don’t know all of the languages it has available. This allows me to write more immersive blog posts with interactive elements.")},m(t,n){b(t,e,n),l(s,t,n),b(t,a,n),r=!0},p(t,e){const a={};1&e&&(a.$$scope={dirty:e,ctx:t}),s.$set(a)},i(t){r||(c(s.$$.fragment,t),r=!0)},o(t){$(s.$$.fragment,t),r=!1},d(t){t&&h(e),g(s,t),t&&h(a)}}}function L(t){let e;return{c(){e=w("Javascript")},l(t){e=x(t,"Javascript")},m(t,s){b(t,e,s)},d(t){t&&h(e)}}}function M(t){let e;return{c(){e=w("C++")},l(t){e=x(t,"C++")},m(t,s){b(t,e,s)},d(t){t&&h(e)}}}function _(t){let e;return{c(){e=w("Python")},l(t){e=x(t,"Python")},m(t,s){b(t,e,s)},d(t){t&&h(e)}}}function R(t){let e;return{c(){e=w("Brainfuck")},l(t){e=x(t,"Brainfuck")},m(t,s){b(t,e,s)},d(t){t&&h(e)}}}function S(t){let e,s,a,r,i,w,x,y,j,T,I,S,B,C,W,A,F,J,K,z;return e=new k({props:{$$slots:{default:[q]},$$scope:{ctx:t}}}),a=new E({props:{$$slots:{default:[P]},$$scope:{ctx:t}}}),i=new H({props:{$$slots:{default:[L]},$$scope:{ctx:t}}}),j=new H({props:{$$slots:{default:[M]},$$scope:{ctx:t}}}),B=new H({props:{$$slots:{default:[_]},$$scope:{ctx:t}}}),F=new H({props:{$$slots:{default:[R]},$$scope:{ctx:t}}}),{c(){n(e.$$.fragment),s=f(),n(a.$$.fragment),r=f(),n(i.$$.fragment),w=f(),x=p("pre"),y=f(),n(j.$$.fragment),T=f(),I=p("pre"),S=f(),n(B.$$.fragment),C=f(),W=p("pre"),A=f(),n(F.$$.fragment),J=f(),K=p("pre"),this.h()},l(t){o(e.$$.fragment,t),s=d(t),o(a.$$.fragment,t),r=d(t),o(i.$$.fragment,t),w=d(t),x=u(t,"PRE",{class:!0}),m(x).forEach(h),y=d(t),o(j.$$.fragment,t),T=d(t),I=u(t,"PRE",{class:!0}),m(I).forEach(h),S=d(t),o(B.$$.fragment,t),C=d(t),W=u(t,"PRE",{class:!0}),m(W).forEach(h),A=d(t),o(F.$$.fragment,t),J=d(t),K=u(t,"PRE",{class:!0}),m(K).forEach(h),this.h()},h(){v(x,"class","language-eval-js"),v(I,"class","language-eval-cpp"),v(W,"class","language-eval-python"),v(K,"class","language-eval-brainfuck")},m(t,n){l(e,t,n),b(t,s,n),l(a,t,n),b(t,r,n),l(i,t,n),b(t,w,n),b(t,x,n),x.innerHTML='<code class="language-eval-js">console.log(&quot;Hello World&quot;);</code>',b(t,y,n),l(j,t,n),b(t,T,n),b(t,I,n),I.innerHTML='<code class="language-eval-cpp">#include &lt;iostream&gt;\nusing namespace std;\n\nint main()\n&#123;\n  cout &lt;&lt; &quot;Hello World&quot; &lt;&lt; endl;\n  return 0;\n&#125;</code>',b(t,S,n),l(B,t,n),b(t,C,n),b(t,W,n),W.innerHTML='<code class="language-eval-python">print(&quot;Hello World&quot;)</code>',b(t,A,n),l(F,t,n),b(t,J,n),b(t,K,n),K.innerHTML='<code class="language-eval-brainfuck">++++++++[&gt;++++[&gt;++&gt;+++&gt;+++&gt;+&lt;&lt;&lt;&lt;-]&gt;+&gt;+&gt;-&gt;&gt;+[&lt;]&lt;-]&gt;&gt;.&gt;---.+++++++..+++.&gt;&gt;.&lt;-.&lt;.+++.------.--------.&gt;&gt;+.&gt;++.</code>',z=!0},p(t,s){const n={};1&s&&(n.$$scope={dirty:s,ctx:t}),e.$set(n);const o={};1&s&&(o.$$scope={dirty:s,ctx:t}),a.$set(o);const l={};1&s&&(l.$$scope={dirty:s,ctx:t}),i.$set(l);const r={};1&s&&(r.$$scope={dirty:s,ctx:t}),j.$set(r);const c={};1&s&&(c.$$scope={dirty:s,ctx:t}),B.$set(c);const $={};1&s&&($.$$scope={dirty:s,ctx:t}),F.$set($)},i(t){z||(c(e.$$.fragment,t),c(a.$$.fragment,t),c(i.$$.fragment,t),c(j.$$.fragment,t),c(B.$$.fragment,t),c(F.$$.fragment,t),z=!0)},o(t){$(e.$$.fragment,t),$(a.$$.fragment,t),$(i.$$.fragment,t),$(j.$$.fragment,t),$(B.$$.fragment,t),$(F.$$.fragment,t),z=!1},d(t){g(e,t),t&&h(s),g(a,t),t&&h(r),g(i,t),t&&h(w),t&&h(x),t&&h(y),g(j,t),t&&h(T),t&&h(I),t&&h(S),g(B,t),t&&h(C),t&&h(W),t&&h(A),g(F,t),t&&h(J),t&&h(K)}}}function B(t){let e,s;const f=[C];let p={$$slots:{default:[S]},$$scope:{ctx:t}};for(let n=0;n<f.length;n+=1)p=a(p,f[n]);return e=new j({props:p}),{c(){n(e.$$.fragment)},l(t){o(e.$$.fragment,t)},m(t,a){l(e,t,a),s=!0},p(t,[s]){const a=0&s?r(f,[i(C)]):{};1&s&&(a.$$scope={dirty:s,ctx:t}),e.$set(a)},i(t){s||(c(e.$$.fragment,t),s=!0)},o(t){$(e.$$.fragment,t),s=!1},d(t){g(e,t)}}}const C={title:"Live Code Snippets",description:"A collection of live code editors in different languages.",date:"2021-05-14T00:00:00.000Z",categories:["Blog Features"],tags:["python","c++","cpp","javascript","js","brainfuck","bf"]},{title:W,description:A,date:F,categories:J,tags:K}=C;var z=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",default:class extends t{constructor(t){super(),e(this,t,null,B,s,{})}},metadata:C});export{z as _};
